#!/usr/bin/env bash
# Do - The Simplest Build Tool on Earth.
# Documentation and examples see https://github.com/8gears/do
#
SCRIPTNAME=`basename "$0"`
BASEDIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )/..
cd ${BASEDIR}

build() {
    npm run build
}

serve() {
    npm run dev
}

test() {
    rsync -r dist docker/test
    cd docker/test
    docker build --quiet -t test-react-deps -f Dockerfile.deps . && \
    docker build --quiet --no-cache -t test-react -f Dockerfile.test-corpus . && \
    docker-compose up --abort-on-container-exit
}

push() {
    rsync -r dist/ root@newtown.energy:/opt/neems/react
}

watch() {
    # This doesn't run a server.  It just builds the project and
    # watches for changes.  Use a backend server like `dosh serve` to
    # serve the files.
    npm run build
    echo "Watching index.html and src/ for changes..."
    inotify-hookable -w src -w index.html -c "echo 'Changes detected, rebuilding...' && ./bin/dosh build"
}

"$@" # <- execute the task
[ "$#" -gt 0 ] || printf "Usage:\n\t./${SCRIPTNAME} %s\n" "($(compgen -A function | grep '^[^_]' | paste -sd '|' -))"
