#!/usr/bin/env python3

import os
import sys
import subprocess

def print_file_content(path):
    print(f"### {path} ###")
    with open(path, 'r', encoding='utf-8', errors='replace') as f:
        print(f.read())

def gather_files(paths):
    all_files = []
    for path in paths:
        if os.path.isfile(path):
            all_files.append(path)
        elif os.path.isdir(path):
            for root, _, files in os.walk(path):
                for file in files:
                    file_path = os.path.join(root, file)
                    all_files.append(file_path)
        else:
            print(f"Warning: {path} is not a valid file or directory.", file=sys.stderr)
    return all_files

def format_files(files):
    out = []
    for file in files:
        out.append(f"### {file} ###")
        try:
            with open(file, 'r', encoding='utf-8', errors='replace') as f:
                out.append(f.read())
        except Exception as e:
            out.append(f"[Error reading {file}: {e}]")
    return "\n".join(out)

def main():
    if len(sys.argv) < 2:
        print("Usage: {sys.argv[0]} <file_or_dir> [<file_or_dir> ...]")
        sys.exit(1)

    paths = sys.argv[1:]
    files = gather_files(paths)
    files.sort()  # Optional: sort for deterministic order

    output = format_files(files)

    # Print to stdout
    print(output)

    # Copy to clipboard with wl-copy
    try:
        proc = subprocess.Popen(['wl-copy'], stdin=subprocess.PIPE)
        proc.communicate(output.encode('utf-8'))
    except Exception as e:
        print(f"Error copying to clipboard: {e}", file=sys.stderr)

if __name__ == "__main__":
    main()
